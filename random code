(defvar a)
(defvar b)
(defvar c)
(defvar d)
(defvar e)
(defvar select)

(write-line "Enter two numbers: ")
(setf a(read))
(setf b(read))

(write-line "Select an option return/newline1. Add return/newline2. Substract return/newline3. Multiply return/newline 4. Square return/newline5. Sin return/newline6. Tan return/newline7. Maximum no. return/newline8. Minimum return/newline9. Cube")
(setf select(read))
(case select
	(1 (sb-thread:make-thread(lambda()
		(setf c(+ a b))
		(write-line "Addition in binary is: ")
		(format t " ~b" c)
		(write-line "Addition in decimal: ")
		(format t " ~d" c))))
	(2 (sb-thread:make-thread(lambda()
		(setf c(- a b))
		(write-line "Sub in binary is: ")
		(format t " ~b" c)
		(write-line "Sub in decimal: ")
		(format t " ~d" c)))))
	(3 (sb-thread:make-thread(lambda()
		(setf c(+ a b))
		(write-line "Addition in binary is: ")
		(format t " ~b" c)
		(write-line "Addition in decimal: ")
		(format t " ~d" c)))))
	(1 (sb-thread:make-thread(lambda()
		(setf c(+ a b))
		(write-line "Addition in binary is: ")
		(format t " ~b" c)
		(write-line "Addition in decimal: ")
		(format t " ~d" c)))))
	(1 (sb-thread:make-thread(lambda()
		(setf c(+ a b))
		(write-line "Addition in binary is: ")
		(format t " ~b" c)
		(write-line "Addition in decimal: ")
		(format t " ~d" c)))))
	(1 (sb-thread:make-thread(lambda()
		(setf c(+ a b))
		(write-line "Addition in binary is: ")
		(format t " ~b" c)
		(write-line "Addition in decimal: ")
		(format t " ~d" c)))))

(exit)
